<div class="fixed-top collapsable @_display">
    <i class="fa fa-bars fa-3x mx-3 my-2" onclick="@ToggleCollapse"></i>

    @if (!_isCollapsed)
    {
        @if (ImgSrc != null)
        {
            <div class="uploaded-img border border-dark">
                <img class="img-fluid" src="@ImgSrc" />
            </div>
        }

        <div class="d-flex flex-column m-auto p-3">
            <InputFile class="m-2" accept="image/*" OnChange="@UploadImage" />

            <div class="container">
                <div class="d-flex justify-content-between">
                    <label for="numClusters" class="label my-2 p-2">
                        Number of colors:
                    </label>
                    <select class="dropdown m-2 p-2" @bind="_numClusters">
                        @for (int i = 1; i <= 8; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="d-flex justify-content-between">
                    <label for="format" class="label my-2 p-2">
                        Choose a Format:
                    </label>
                    <select class="dropdown m-2 p-2" @bind="_format">
                        <option value="RGB" selected>RGB</option>
                        <option value="CMYK">CMYK</option>
                        <option value="HSL">HSL</option>
                        <option value="HSV">HSV</option>
                    </select>
                </div>
            </div>


            <button type="btn" class="btn btn-dark m-2 p3" onclick="@(() => 
                CreatePalette(@_numClusters, @_format))">
                <i class="fa fa-play"></i>
            </button>
        </div>
    }
</div>

@code {
    [Parameter]
    public Action<InputFileChangeEventArgs> UploadImage { get; set; }
    
    [Parameter]
    public string? ImgSrc { get; set; }

    [Parameter]
    public Action<int, string> CreatePalette { get; set; }

    // controls display of the bar
    private bool _isCollapsed = true;
    private string _display = "";

    private int _numClusters = 5;
    private string _format = "RGB";

    private void ToggleCollapse()
    {
        _isCollapsed = !_isCollapsed;
        _display = (_display.Length > 0) ? "" : 
            "uncollapsed border border-dark slide-in" ;
    }
}